/**
 * Import t·∫•t c·∫£ LDPlayer instances hi·ªán c√≥ v√†o h·ªá th·ªëng Profile
 * Ch·∫°y: npx tsx import-instances.ts
 */

import LDPlayerController from './server/core/LDPlayerController.js';
import ProfileManager from './server/services/ProfileManager.js';
import dotenv from 'dotenv';

dotenv.config();

async function importInstances() {
  const controller = new LDPlayerController();
  const profileManager = new ProfileManager(controller);

  try {
    console.log('\n=== IMPORT LDPLAYER INSTANCES V√ÄO H·ªÜ TH·ªêNG ===\n');

    // Step 1: Scan t·∫•t c·∫£ instances
    console.log('üì± B∆∞·ªõc 1: Scan t·∫•t c·∫£ LDPlayer instances...');
    const instances = await controller.getAllInstancesFromLDConsole();

    console.log(`‚úÖ T√¨m th·∫•y ${instances.length} instances:\n`);
    instances.forEach(inst => {
      console.log(`   - ${inst.name} (index: ${inst.index}, port: ${inst.port})`);
    });
    console.log();

    // Step 2: Import v√†o h·ªá th·ªëng
    console.log('üì• B∆∞·ªõc 2: Import instances v√†o h·ªá th·ªëng Profile...');
    const profiles = await profileManager.scanAndImportAllInstances();

    console.log(`‚úÖ ƒê√£ import ${profiles.length} profiles:\n`);
    profiles.forEach(profile => {
      console.log(`   - ${profile.name} (ID: ${profile.id})`);
      console.log(`     Instance: ${profile.instanceName}`);
      console.log(`     Port: ${profile.port}`);
      console.log(`     Status: ${profile.status}\n`);
    });

    console.log('üéâ === HO√ÄN T·∫§T ===');
    console.log('\nC√°c instances ƒë√£ ƒë∆∞·ª£c import v√†o h·ªá th·ªëng.');
    console.log('B·∫°n c√≥ th·ªÉ qu·∫£n l√Ω ch√∫ng qua:');
    console.log('  - Web UI: http://localhost:5173 ‚Üí Tab Profiles');
    console.log('  - API: GET http://localhost:5051/api/profiles');
    console.log('\nƒê·ªÉ launch profile:');
    console.log('  POST /api/profiles/:profileId/activate');

  } catch (error) {
    console.error('\n‚ùå L·ªñI:', error);
    throw error;
  }
}

// Run import
importInstances().catch(console.error);
